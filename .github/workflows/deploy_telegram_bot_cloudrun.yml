name: Deploy - Telegram Bot - CloudRun

on:
  workflow_run:
    workflows: ["Plate recognition app code checks"]
    branches: ["production"]
    types: 
      - completed
  workflow_dispatch:

jobs:
  build-and-push-artifact-registry:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ GITHUB_REF_NAME }}

      -
        name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: us-central1-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GAR_JSON_KEY }}
      -
        name: Build and push (GCP)
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile_bot
          push: true
          tags: ${{ vars.BOT_DOCKER_IMAGE }}
          
  #https://github.com/google-github-actions/deploy-cloudrun
  deploy-cloudrun:
    needs: [build-and-push-artifact-registry]
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - uses: 'actions/checkout@v3'
      with:
          ref: ${{ GITHUB_REF_NAME }}
    - uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: ${{ secrets.CLOUD_RUN_JSON_KEY }}

    - id: 'deploy'
      uses: 'google-github-actions/deploy-cloudrun@v1'
      with:
        service: ${{ vars.BOT_SERVICE_NAME }}
        image: ${{ vars.BOT_DOCKER_IMAGE }}
        env_vars: |
          PLATE_RECOGNITION_APP_SCHEMA=${{ vars.PLATE_RECOGNITION_APP_SCHEMA }}
          PLATE_RECOGNITION_APP_HOST=${{ vars.PLATE_RECOGNITION_APP_HOST }}
          PLATE_RECOGNITION_APP_PORT=${{ vars.PLATE_RECOGNITION_APP_PORT }}
          TELEGRAM_API_TOKEN=${{ secrets.TELEGRAM_API_TOKEN }}
    - name: 'Use output'
      run: 'curl "${{ steps.deploy.outputs.url }}"'