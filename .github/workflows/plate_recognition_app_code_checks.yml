name: Plate recognition app code checks

on: 
  push:
    paths-ignore:
    - 'prometheus/**'
    - 'grafana/**'
    - '.github/workflows/grafana*'
    - '.github/workflows/prometheus*'

jobs:
  pylint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_app.txt
        pip install pylint
    - name: Analysing the code with pylint
      run: |
        pylint --fail-under=6.0 $(git ls-files 'src/*.py') 
  pynblint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pynblint
    - name: Analysing the code with pynblint
      run: |
        pynblint 'notebooks'
  pytest:
    needs: [pylint, pynblint]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements_app.txt
        python -m pip install -e .
        python -m pip install pytest
        python -m pip list
    - name: Run tests with pytest
      run: |
        python -m pytest tests