version: "3"

services:

  plate-recognition-app:
    container_name: plate-recognition-app
    env_file: .env
    build:
      context: ./
      dockerfile: Dockerfile_app
    volumes:
      - ./src/common:/app/src/common
      - ./src/app:/app/src/app
      - ./models:/app/models
    ports:
      - '9080:8080'
      - '5678:5678'
    entrypoint: ["sh", "-c", "pip install debugpy -t /tmp && python /tmp/debugpy --listen 0.0.0.0:5678 -m uvicorn src.app.main:app --host 0.0.0.0 --port 8080 --reload"]
  bot:
    container_name: bot
    env_file: .env
    build:
      context: ./
      dockerfile: Dockerfile_bot
    volumes:
      - ./src:/app/src
    ports:
      - '5679:5678'
    entrypoint: ["sh", "-c", "pip install debugpy -t /tmp && python /tmp/debugpy --listen 0.0.0.0:5678 src/bot/plate_recognition_bot.py"]
  prometheus:
    container_name: prometheus
    build: 
      context: prometheus
      dockerfile: Dockerfile
    ports:
      - 9090:9090
    environment:
      - PLATE_RECOGNITION_APP_HOST=plate-recognition-app:8080
  grafana:
    container_name: grafana
    build: 
      context: grafana
      dockerfile: Dockerfile
    volumes:
      - /grafana/datasources.yaml /etc/grafana/provisioning/datasources/datasources.yaml
    ports:
      - '3000:3000'
    environment:
      - PROMETHEUS_HOST=prometheus
      - PROMETHEUS_PORT=9090